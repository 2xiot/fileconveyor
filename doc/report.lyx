#LyX 1.6.1 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
\setcounter{page}{0}
\end_preamble
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\pdf_quoted_options "linkcolor=blue, citecolor=black, urlcolor=blue, filecolor=blue, pdftex"
\papersize a4paper
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip bigskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
Improving Drupal's page loading performance
\end_layout

\begin_layout Author
Thesis proposed to achieve the degree of bachelor
\begin_inset Newline newline
\end_inset

in computer science/ICT/knowledge technology
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset

Wim Leers
\begin_inset Newline newline
\end_inset


\begin_inset Newline newline
\end_inset


\shape italic
Promotor
\shape default
: Prof.
 dr.
 Wim Lamotte
\shape italic

\begin_inset Newline newline
\end_inset

Co-promotor
\shape default
: 
\shape italic
\emph on
dr.
 Peter Quax
\emph default

\begin_inset Newline newline
\end_inset

Mentor
\shape default
s: Stijn Agten & Maarten Wijnants
\end_layout

\begin_layout Date
Hasselt University
\begin_inset Newline newline
\end_inset

Academic year 2008-2009
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
thispagestyle{empty}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Abstract
\end_layout

\begin_layout Section
Preface
\end_layout

\begin_layout Section
Nederlandstalige samenvatting
\end_layout

\begin_layout Section
Terminology
\end_layout

\begin_layout Description
AHAH Asynchronous HTML And HTTP.
 Similar to AJAX, but the transfered content is HTML instead of XML.
\end_layout

\begin_layout Description
browser A web browser is an application that runs on end user computers
 to view web sites (which live on the World Wide Web).
 Examples are Firefox, Internet Explorer, Safari and Opera.
\end_layout

\begin_layout Description
CDN A content delivery network (CDN) is a collection of web servers distributed
 across multiple locations to deliver content more efficiently to users.
 The server selected for delivering content to a specific user is typically
 based on a measure of network proximity.
 
\end_layout

\begin_layout Description
component A component of a web page, this can be a CSS style sheet, a JavaScript
 file, an image, a font, a movie file, etc.
\end_layout

\begin_layout Description
web
\begin_inset space ~
\end_inset

page An (X)HTML document that potentially references components.
\end_layout

\begin_layout Description
page
\begin_inset space ~
\end_inset

rendering
\begin_inset space ~
\end_inset

performance The time it takes to load a web page and all its components.
\end_layout

\begin_layout Description
page
\begin_inset space ~
\end_inset

loading
\begin_inset space ~
\end_inset

performance The time the server needs to render a web page.
\end_layout

\begin_layout Description
above
\begin_inset space ~
\end_inset

the
\begin_inset space ~
\end_inset

fold The initially visible part of a web page: the part that you can see
 without scrolling
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Definition
\end_layout

\begin_layout Standard
When a end user loads a web page, the time perceived by him until the page
 has loaded entirely is called the 
\emph on
end user response time
\emph default
.
 Unlike what you might think, the majority of this time isn't spent at the
 server, generating the page! The generating (back-end) and transport of
 the HTML document (front-end) is typically only 10-20% of the end user
 response time.
 The other 80-90% of the time is spent on loading the components (CSS stylesheet
s, JavaScript, images, movies, etc.) in the page (front-end only).
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:End-user-response-time"

\end_inset

 clarifies this visually:
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/pageloading piechart.png
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
End user response time of a typical web page.
\begin_inset CommandInset label
LatexCommand label
name "fig:End-user-response-time"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
It should be obvious now that it's far more effective to focus on front-end
 performance than it is to focus on back-end performance, because it's got
 a greater potential.
 It's also easier to optimize than the back-end.
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Why it matters
\end_layout

\begin_layout Standard
Page loading performance matters for a single reason:
\end_layout

\begin_layout Quote
Users care about performance!
\end_layout

\begin_layout Standard
Your web site's visitors won't be timing the page loads themselves, but
 they will browse elsewhere when you're forcing them to wait too long.
 Fast web sites are rewarded, slow web sites are punished.
 Fast web sites get more visitors, have happier visitors and their visitors
 return more often.
 If the revenue of your company is generated through your web site, you'll
 want to make sure that page loading performance is as good as possible,
 because it will maximize your revenue as well.
\end_layout

\begin_layout Standard
Some statistics:
\end_layout

\begin_layout Itemize
Amazon: 100 ms of extra load time caused a 1% drop in sales 
\begin_inset CommandInset citation
LatexCommand cite
key "presentation Design Fast Websites"

\end_inset


\end_layout

\begin_layout Itemize
Yahoo!: 400 ms of extra load time caused a 5-9% drop in full-page traffic
 (meaning that they leave before the page has finished loading) 
\begin_inset CommandInset citation
LatexCommand cite
key "presentation Design Fast Websites"

\end_inset


\end_layout

\begin_layout Itemize
Google: 500 ms of extra load time caused 20% fewer searches 
\begin_inset CommandInset citation
LatexCommand cite
key "presentation Design Fast Websites"

\end_inset


\end_layout

\begin_layout Itemize
Google: trimming page size by 30% resulted in 30% more map requests 
\begin_inset CommandInset citation
LatexCommand cite
key "Google maps load time impact"

\end_inset


\end_layout

\begin_layout Standard
It's clear that even the smallest delays can have disastrous and wondrous
 effects.
 
\end_layout

\begin_layout Standard
Now, why is this important to Drupal – because this bachelor thesis is about
 improving Drupal's page loading performance in particular? Because then
 the Drupal Experience is better: a faster web site results in happier users
 and developers.
 If your site is a commercial one – either through ads or a store, then
 it also impacts your revenue.
 More generally, a faster Drupal would affect many:
\end_layout

\begin_layout Itemize
Drupal is increasinly used for big, high-traffic web sites, thus a faster
 Drupal would affect a lot of people
\end_layout

\begin_layout Itemize
Drupal is still growing in popularity (according to its usage statistics,
 which only includes web sites with the Update Status module enabled, there
 are over 140,000 web sites as of February 22, 2009, see 
\begin_inset CommandInset citation
LatexCommand cite
key "Drupal usage statistics"

\end_inset

) and would therefor affect ever more people
\end_layout

\begin_layout Itemize
Drupal is international, thanks to its i18n/L10n support, and thanks to
 that it's used for sites with very international audiences (whom face high
 network latencies) and developing countries (where low-speed internet connectio
ns are commonplace).
 A faster Drupal would make a big difference there as well.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Profiling tools
\end_layout

\begin_layout Quote

\emph on
If you can not measure it, you can not improve it.
\end_layout

\begin_layout Quote
Lord Kelvin
\end_layout

\begin_layout Standard
The same applies to page loading performance: if you can't measure it, you
 can't know which parts have the biggest effect and thus deserve your focus.
 So before doing any real work, we'll have to figure out which tools can
 help us analyzing page loading performance.
 
\begin_inset Quotes eld
\end_inset

profiling
\begin_inset Quotes erd
\end_inset


\emph on
 
\emph default
turns out to be a more accurate description than 
\begin_inset Quotes eld
\end_inset

analyzing
\begin_inset Quotes erd
\end_inset

:
\end_layout

\begin_layout Quotation
In software engineering, 
\emph on
performance analysis, more commonly today known as profiling
\emph default
, is the investigation of a program's behavior using information gathered
 as the program executes.
 The 
\emph on
usual goal of performance analysis is to determine which sections of a program
 to optimize
\emph default
 — usually either to increase its speed or decrease its memory requirement
 (or sometimes both).
\end_layout

\begin_layout Standard
So we'll go through a list of tools: UA Profiler, Cuzillion, YSlow, Hammerhead,
 Apache JMeter, Gomez/Keynote/WebMetrics/Pingdom and Jiffy/Episodes.
 As you can tell, it's a pretty long list, so I'll pick the tools I'll use
 while improving Drupal's page loading performance based on two factors:
\end_layout

\begin_layout Enumerate
How the tool could help improve Drupal core's page loading performance.
\end_layout

\begin_layout Enumerate
How the tool could help Drupal site owners profile their site's page loading
 performance.
\end_layout

\begin_layout Subsection
UA Profiler
\end_layout

\begin_layout Standard
UA Profiler 
\begin_inset CommandInset citation
LatexCommand cite
key "UA Profiler"

\end_inset

 is a crowd-sourced project for gathering browser performance characteristics
 (parallel connections, downloading scripts without blocking, caching, etc.).
 The tests run automatically when you navigate to the test page from any
 browser – this is why it's powered by crowdsourcing.
\end_layout

\begin_layout Standard
It's a handy, informative tool to find out which browser supports which
 features related to page loading performance.
\end_layout

\begin_layout Subsection
Cuzillion
\end_layout

\begin_layout Standard
Cuzillion 
\begin_inset CommandInset citation
LatexCommand cite
key "Cuzillion"

\end_inset

 was introduced 
\begin_inset CommandInset citation
LatexCommand cite
key "Cuzillion announcement"

\end_inset

 on April 25, 2008 so it is a relatively new tool.
 Its tag line, 
\emph on

\begin_inset Quotes eld
\end_inset

‘cuz there are zillion pages to check
\emph default

\begin_inset Quotes erd
\end_inset

 indicates what it's about: there are a lot of possible combinations of
 stylesheets, scripts and images.
 Plus they can be external or inline.
 And each combination has different effects.
 Finally, to further complicate the situation, all these combinations depend
 on the browser being used.
 It should be obvious that without Cuzillion, it's an insane job to figure
 out how each browser behaves:
\end_layout

\begin_layout Quote
Before I would open an editor and build some test pages.
 Firing up a packet sniffer I would load these pages in different browsers
 to diagnose what was going on.
 I was starting my research on advanced techniques for loading scripts without
 blocking and realized the number of test pages needed to cover all the
 permutations was in the hundreds.
 That was the birth of Cuzillion.
\end_layout

\begin_layout Standard
Cuzillion is not a tool that helps you analyze any 
\emph on
existing 
\emph default
web page.
 Instead, it allows you to analyze any combination of components.
 That means it's a 
\emph on
learning tool
\emph default
.
 You could also look at it as a 
\emph on
browser profiling tool
\emph default
 instead of all other listed tools, which are 
\emph on
page loading profiling tools
\emph default
.
\end_layout

\begin_layout Standard
Let's go through a simple example for a better understanding.
 How does the following combination of components (in the 
\family typewriter
<body>
\family default
 tag) behave in different browsers?
\end_layout

\begin_layout Enumerate
an image on domain 1 with a 2 second delay
\end_layout

\begin_layout Enumerate
an inline script with a 2 second execution time
\end_layout

\begin_layout Enumerate
an image on domain 1 with a 2 second delay
\end_layout

\begin_layout Standard
First you create this setup in Cuzillion (see figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Cuzillion"

\end_inset

).
 This generates a unique URL.
 You can then copy this URL to all browsers you'd like to test.
\end_layout

\begin_layout Standard
As you can see, Safari and Firefox behave very differently.
 In Safari (see figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Cuzillion-Safari"

\end_inset

), the loading of the first image seems to be deferred until the inline
 script has been executed.
 In Firefox (see figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Cuzillion-Firefox"

\end_inset

), the first image is immediately rendered and after a delay of 2 seconds
 – indeed the execution time of the inline script – the second image is
 rendered.
 Without going into details about this, it should be clear that Cuzillion
 is a simple, yet powerful tool to learn about browser behavior, which can
 in turn help to improve the page loading performance.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/profiling/cuzillion.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The example situation created in Cuzillion.
\begin_inset CommandInset label
LatexCommand label
name "fig:Cuzillion"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename /Users/wimleers/School/thesis/svn/doc/images/profiling/cuzillion - safari.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The example situation in Safari 3.
\begin_inset CommandInset label
LatexCommand label
name "fig:Cuzillion-Safari"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/profiling/cuzillion - firefox.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The example situation in Firefox 3.
\begin_inset CommandInset label
LatexCommand label
name "fig:Cuzillion-Firefox"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
YSlow
\begin_inset CommandInset label
LatexCommand label
name "sub:YSlow"

\end_inset


\end_layout

\begin_layout Standard
YSlow 
\begin_inset CommandInset citation
LatexCommand cite
key "YSlow"

\end_inset

 also is a Firebug 
\begin_inset CommandInset citation
LatexCommand cite
key "Firebug"

\end_inset

 extension (see 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:YSlow-example"

\end_inset

) that can be used to analyze page loading performance through 13 rules.
 These were part of the original 14 rules 
\begin_inset CommandInset citation
LatexCommand cite
key "YSlow Rules"

\end_inset

 – of which there are now 34 – of 
\begin_inset Quotes eld
\end_inset

Exceptional Performance
\begin_inset Quotes erd
\end_inset

 
\begin_inset CommandInset citation
LatexCommand cite
key "Exceptional Performance"

\end_inset

, as developed the Yahoo! performance team.
\end_layout

\begin_layout Standard
YSlow 1.0 can only evaluate these 13 rules and has a hardcoded grading algorithm.
 You should also remember that YSlow just checks how well a web page implements
 these rules.
 It analyzes the content of your web page (and the headers that were sent
 with it).
 For example, it doesn't test the latency or speed of a CDN, it just checks
 if you are using one.
 As an example, because you have to tell YSlow (via Firefox' 
\family typewriter
about:config
\family default
) what the domain name of your CDN is, you can even fool YSlow into thinking
 any site is using a CDN: see 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Tricking-YSlow"

\end_inset

.
\end_layout

\begin_layout Standard
That, and the fact that some of the rules it analyzes are only relevant
 to 
\emph on
very
\emph default
 big web site.
 For example, one of the rules (#13, 
\begin_inset Quotes eld
\end_inset

Configure ETags
\begin_inset Quotes erd
\end_inset

) is only relevant if you're using a cluster of web servers.
 For a more in-depth article on how to deal with YSlow's evaluation of your
 web sites, see 
\begin_inset CommandInset citation
LatexCommand cite
key "YSlow Jeff Atwood"

\end_inset

.
 YSlow 2.0 
\begin_inset CommandInset citation
LatexCommand cite
key "YSlow 2.0 early preview"

\end_inset

 aims to be more extensible and customizable: it will allow for community
 contributions, or even web site specific rules.
\end_layout

\begin_layout Standard
Since only YSlow 1.0 is available at the time of writing, I'll stick with
 that.
 It's a very powerful and helpful tool as it stands, it'll just get better.
 But remember the two caveats: it only verifies rules (it doesn't measure
 real-world performance) and some of the rules may not be relevant for your
 web site.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename /Users/wimleers/School/thesis/svn/doc/images/profiling/YSlow.png
	width 100text%

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
YSlow applied to drupal.org.
 
\begin_inset CommandInset label
LatexCommand label
name "fig:YSlow-example"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename /Users/wimleers/School/thesis/svn/doc/images/profiling/YSlow drupal.org without CDN.png
	width 40text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The original YSlow analysis.
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename /Users/wimleers/School/thesis/svn/doc/images/profiling/YSlow drupal.org with CDN.png
	width 40text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
The resulting YSlow analysis.
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Tricking YSlow into thinking drupal.org is using a CDN.
\begin_inset CommandInset label
LatexCommand label
name "fig:Tricking-YSlow"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Hammerhead
\begin_inset CommandInset label
LatexCommand label
name "sub:Hammerhead"

\end_inset


\end_layout

\begin_layout Standard
Hammerhead 
\begin_inset CommandInset citation
LatexCommand cite
key "Hammerhead,Hammerhead announcement"

\end_inset

 is a Firebug 
\begin_inset CommandInset citation
LatexCommand cite
key "Firebug"

\end_inset

 extension that should be used 
\emph on
while
\emph default
 developing.
 It measures how long a page takes to load and it can load a page multiple
 times, to calculate the average and mean page load times.
 Of course, this is a lot less precise than real-world profiling, but it
 allows you to profile while you're working.
 It's far more effective to prevent page loading performance problems due
 to changes in code, because you have the test results within seconds or
 minutes after you've made these changes!
\end_layout

\begin_layout Standard
Of course, you could also use YSlow (see section 
\begin_inset CommandInset ref
LatexCommand prettyref
reference "sub:YSlow"

\end_inset

) or FasterFox 
\begin_inset CommandInset citation
LatexCommand cite
key "Fasterfox"

\end_inset

, but then you have to load the page multiple times (i.e.
 
\emph on
hammer 
\emph default
the server, this is where the name comes from).
 And you'd still have to set up the separate testing conditions for each
 page load: empty cache, primed cache and for the latter there are again
 two possible situations: disk cache 
\emph on
and
\emph default
 memory cache or just disk cache.
 Memory cache is of course faster than disk cache; that's also why that
 distinction is important.
 Finally, it supports exporting the resulting data into CSV format, so you
 could even create some tools to roughly track page loading performance
 throughout time.
\begin_inset Newline newline
\end_inset

See figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Hammerhead"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/profiling/Hammerhead.png
	scale 36

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Hammerhead.
\begin_inset CommandInset label
LatexCommand label
name "fig:Hammerhead"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Apache JMeter
\begin_inset CommandInset label
LatexCommand label
name "sub:Apache-JMeter"

\end_inset


\end_layout

\begin_layout Standard
Apache JMeter 
\begin_inset CommandInset citation
LatexCommand cite
key "Apache JMeter"

\end_inset

 is an application 
\emph on
designed to load test functional behavior and measure performance
\emph default
.
 In the perspective of profiling page loading performance, the relevant
 features are: loading of web pages with and without its components and
 measuring the response time of just the HTML or the HTML and all the components
 it references.
\end_layout

\begin_layout Standard
However, it has several severe limitations:
\end_layout

\begin_layout Itemize
Because it only measures from one location – the location from where it's
 run, it doesn't give a good big picture.
\end_layout

\begin_layout Itemize
It isn't an actual browser, so it doesn't download components referenced
 from CSS or JS files.
\end_layout

\begin_layout Itemize
Also because it isn't an actual browser, it doesn't behave the same as browsers
 when it comes to parallel downloads.
\end_layout

\begin_layout Itemize
It requires more setup than Hammerhead (see 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Hammerhead"

\end_inset

), so it's less likely that a developer will make JMeter part of his workflow.
\end_layout

\begin_layout Standard
It can be very useful in case you're doing performance testing (How long
 does the back-end need to generate certain pages?), load testing (How many
 concurrent users can the back-end/server setup handle?) and stress testing
 (How many concurrent users can it handle until errors ensue?)
\begin_inset Newline newline
\end_inset

To learn more about load testing Drupal with Apache JMeter, see 
\begin_inset CommandInset citation
LatexCommand cite
key "JMeter Drupal article 1,JMeter Drupal article 2"

\end_inset


\end_layout

\begin_layout Subsection
Gomez/Keynote/WebMetrics/Pingdom
\begin_inset CommandInset label
LatexCommand label
name "sub:Gomez/Keynote/WebMetrics/Pingdom"

\end_inset


\end_layout

\begin_layout Standard
Gomez 
\begin_inset CommandInset citation
LatexCommand cite
key "Gomez web site"

\end_inset

, KeyNote 
\begin_inset CommandInset citation
LatexCommand cite
key "Keynote web site"

\end_inset

, WebMetrics 
\begin_inset CommandInset citation
LatexCommand cite
key "WebMetrics web site"

\end_inset

 and Pingdom 
\begin_inset CommandInset citation
LatexCommand cite
key "Pingdom web site"

\end_inset

 are examples of 3rd-party (paid) performance monitoring systems.
\end_layout

\begin_layout Standard
They have four major disadvantages:
\end_layout

\begin_layout Enumerate
limited number of measurement points
\end_layout

\begin_layout Enumerate
no real-world browsers are used
\end_layout

\begin_layout Enumerate
unsuited for Web 2.0
\end_layout

\begin_layout Enumerate
paid & closed source
\end_layout

\begin_layout Subsubsection
Limited number of measurement points
\end_layout

\begin_layout Standard
These services poll your site at regular or irregular intervals.
 This poses analysis problems: for example, if one your servers is very
 slow just at that one moment that any of these services requests a page,
 you will be told that there's a major issue with your site.
 But that's not necessarily true: it might be a fluke.
\end_layout

\begin_layout Subsubsection
No real-world browsers
\end_layout

\begin_layout Standard
Most, if not all of these services use their own custom clients 
\begin_inset CommandInset citation
LatexCommand cite
key "video of Velocity 2008 Jiffy presentation"

\end_inset

.
 That implies their results aren't a representation of the real-world situation,
 which means you can't rely upon these metrics for making decisions: what
 if a commonly used real-world browser behaves completely differently? Even
 if the services would all use real-world browsers, they would never reflect
 real-world performance, because browser usage evolves over time and aren't
 the same for any two web sites.
\end_layout

\begin_layout Subsubsection
Unsuited for Web 2.0
\end_layout

\begin_layout Standard
The problem with these services is that they still assume the World Wide
 Web is the same as it was 10 years ago, where JavaScript was rather a scarcity
 than the abundancy it is today.
 They still intrerpret the 
\family typewriter
onload
\family default
 event as the 
\begin_inset Quotes eld
\end_inset

end time
\begin_inset Quotes erd
\end_inset

 for response time measurements.
 In Web 1.0, that was fine.
 But as the adoption of AJAX 
\begin_inset CommandInset citation
LatexCommand cite
key "AJAX wikipedia"

\end_inset

 has grown, the 
\family typewriter
onload
\family default
 event has become less and less representative of when the page is ready
 (i.e.
 has completely loaded), because the page can continue to load additional
 components.
 For some web sites, the 
\begin_inset Quotes eld
\end_inset

above the fold
\begin_inset Quotes erd
\end_inset

 section of a web page has been optimized, thereby loading 
\begin_inset Quotes eld
\end_inset

heavier
\begin_inset Quotes erd
\end_inset

 content later, below the fold.
 Thus the 
\begin_inset Quotes eld
\end_inset

page ready
\begin_inset Quotes erd
\end_inset

 point in time is shifted from its default.
\end_layout

\begin_layout Standard
In both of these cases, the 
\family typewriter
onload
\family default
 event is too optimistic 
\begin_inset CommandInset citation
LatexCommand cite
key "white paper Episodes"

\end_inset

.
\end_layout

\begin_layout Standard
There are two ways to measure Web 2.0 web sites 
\begin_inset CommandInset citation
LatexCommand cite
key "presentation Episodes"

\end_inset

:
\end_layout

\begin_layout Enumerate

\emph on
manual scripting
\emph default
: identify timing points using scripting tools (Selenium 
\begin_inset CommandInset citation
LatexCommand cite
key "web site Selenium"

\end_inset

, Keynote's KITE 
\begin_inset CommandInset citation
LatexCommand cite
key "Keynote KITE"

\end_inset

, etc.).
 This approach has a long list of disadvantages: low accuracy, high switching
 costs, high maintenance costs, synthetic (no real-world measurements).
\end_layout

\begin_layout Enumerate

\emph on
programmatic scripting
\emph default
: timing points are marked by JavaScript (Jiffy 
\begin_inset CommandInset citation
LatexCommand cite
key "Jiffy project"

\end_inset

, Gomez Script Recorder 
\begin_inset CommandInset citation
LatexCommand cite
key "Gomez Script Recorder"

\end_inset

, etc.).
 This is the preferred approach: it has lower maintenance costs and a higher
 accuracy because the code for timing is included in the other code and
 measures real user traffic.
\begin_inset Newline newline
\end_inset

If we would now work on a shared implementation of this approach, then we
 wouldn't have to reinvent the wheel every time and switching costs would
 be much lower.
 See the Jiffy/Episodes later on.
\end_layout

\begin_layout Subsubsection
Paid & closed source
\end_layout

\begin_layout Standard
You're dependent upon the 3rd party service to implement new instrumentations
 and analysises.
 There's a high cost for the implementation cost and a very high cost when
 switching to a different 3rd party service.
\end_layout

\begin_layout Subsection
Jiffy/Episodes
\begin_inset CommandInset label
LatexCommand label
name "sub:Jiffy/Episodes"

\end_inset


\end_layout

\begin_layout Subsubsection
Jiffy
\begin_inset CommandInset label
LatexCommand label
name "sub:Jiffy"

\end_inset


\end_layout

\begin_layout Standard
Jiffy 
\begin_inset CommandInset citation
LatexCommand cite
key "Velocity 2008 Jiffy presentation,video of Velocity 2008 Jiffy presentation,Jiffy project"

\end_inset

 is designed to give you real-world information on what's actually happening
 within browsers of users that are visiting your site.
 It shows you how long pages really take to load and how long events that
 happen while or after your page is loading really take.
 Especially when you don't control all the components of your web site (e.g.
 widgets of photo and music web sites, contextual ads or web analytics services)
, it's important that you can monitor their performance.
 It overcomes to 4 major disadvantages that were listed previously:
\end_layout

\begin_layout Enumerate
it can measure 
\emph on
every
\emph default
 page load if desired
\end_layout

\begin_layout Enumerate
real-world browsers are used, becuase it's just JavaScript code that runs
 in the browser
\end_layout

\begin_layout Enumerate
well-suited for Web 2.0, because you can configure it to measure 
\emph on
anything
\end_layout

\begin_layout Enumerate
open source
\end_layout

\begin_layout Standard
Jiffy consists of several components:
\end_layout

\begin_layout Itemize

\family typewriter
Jiffy.js
\family default
: a library for instrumenting your pages and reporting measurements
\end_layout

\begin_layout Itemize
Apache configuration: to receive and log measurements
\end_layout

\begin_layout Itemize
Ingestor: parse logs and store in a database (currently only supports Oracle
 XE)
\end_layout

\begin_layout Itemize
Reporting toolset
\end_layout

\begin_layout Itemize
Firebug extension 
\begin_inset CommandInset citation
LatexCommand cite
key "Jiffy Firebug Extension"

\end_inset

, see figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Jiffy"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/profiling/Jiffy.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Jiffy.
\begin_inset CommandInset label
LatexCommand label
name "fig:Jiffy"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Jiffy was built to be used by the WhitePages web site 
\begin_inset CommandInset citation
LatexCommand cite
key "web site WhitePages"

\end_inset

 and has been running on that site.
 At more than 10 million page views per day, it should be clear that Jiffy
 can scale quite well.
 It's been released as an open source project, but at the time of writing,
 the last commit was on July 25, 2008.
 So it's a dead project.
\end_layout

\begin_layout Subsubsection
Episodes
\begin_inset CommandInset label
LatexCommand label
name "sub:Episodes"

\end_inset


\end_layout

\begin_layout Standard
Episodes 
\begin_inset CommandInset citation
LatexCommand cite
key "Episodes home page,Episodes white paper"

\end_inset

 is very much like Jiffy.
 There are two differences:
\end_layout

\begin_layout Enumerate
Episodes' goal is to become an industry standard.
 This would imply that the aforementioned 3rd party services (Gomez/Keynote/WebM
etrics/Pingdom) would take advantage of the the instrumentations implemented
 through Episodes in their anylises.
\end_layout

\begin_layout Enumerate
Most of the implementation is built into browsers (
\family typewriter
window.postMessage(),
\family default
 
\family typewriter
addEventListener()
\family default
), which means there is less code that must be downloaded.
 (Note: the newest versions of browsers are necessary: Internet Explorer
 8, Firefox 3, WebKit Nightlies and Opera 9.5.
 An additional backwards compatibility JavaScript file must be downloaded
 for older browsers.)
\end_layout

\begin_layout Standard
Steve Souders outlines the goals and vision for Episodes succinctly in these
 two paragrahps:
\end_layout

\begin_layout Quotation

\emph on
The goal is to make Episodes the industrywide solution for measuring web
 page load times.

\emph default
 This is possible because Episodes has benefits for all the stakeholders.
 Web developers only need to learn and deploy a single framework.
 Tool developers and web metrics service providers get more accurate timing
 information by relying on instrumentation inserted by the developer of
 the web page.
 Browser developers gain insight into what's happening in the web page by
 relying on the context relayed by Episodes.
\end_layout

\begin_layout Quotation
Most importantly, users benefit by the adoption of Episodes.
 They get a browser that can better inform them of the web page's status
 for Web 2.0 apps.
 Since Episodes is a lighter weight design than other instrumentation frameworks
, users get faster pages.
 As Episodes makes it easier for web developers to shine a light on performance
 issues, 
\emph on
the end result is an Internet experience that is faster for everyone
\emph default
.
\end_layout

\begin_layout Standard
A couple of things can be said about the current codebase of Episodes:
\end_layout

\begin_layout Itemize
There are two JavaScript files: 
\family typewriter
episodes.js
\family default
 and 
\family typewriter
episodes-compat.js
\family default
.
 The latter is loaded on-the-fly when an older browser is being used that
 doesn't support 
\family typewriter
window.postMessage()
\family default
.
 These are operational but haven't had wide testing yet.
\end_layout

\begin_layout Itemize
It uses the same query string syntax as Jiffy uses, which means Jiffy's
 Apache configuration, ingestor and reporting toolset can be reused, at
 least partially.
\end_layout

\begin_layout Itemize
It has its own Firebug extension, see figure 
\begin_inset CommandInset ref
LatexCommand vref
reference "fig:Episodes"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename images/profiling/Episodes.png
	width 100text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Episodes.
\begin_inset CommandInset label
LatexCommand label
name "fig:Episodes"

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
So, Episodes' very 
\emph on
raison d'existence
\emph default
 is to achieve a concensus on a JavaScript-based page loading instrumentation
 toolset.
 It aims to become an industry standard and is maintained by Steve Souders,
 who is currently on Google's payroll to work on all things page loading
 performance full-time (which suggests we might see integration with Google's
 Analytics 
\begin_inset CommandInset citation
LatexCommand cite
key "Google Analytics"

\end_inset

 service in the long term).
 Add in the fact that Jiffy hasn't been updated since its initial release,
 and it becomes clear that Episodes is the better long-term choice.
\end_layout

\begin_layout Subsection
Conclusion
\begin_inset CommandInset label
LatexCommand label
name "sub:ProfilingTools:Conclusion"

\end_inset


\end_layout

\begin_layout Standard
There isn't a single, 
\begin_inset Quotes eld
\end_inset

do-it-all
\begin_inset Quotes erd
\end_inset

 tool that you should use.
 Instead, you should wisely combine all of the above tools.
 Use the tool that fits the task at hand.
\end_layout

\begin_layout Standard
However, for the scope of this thesis, there is one tool that jumps out:
 YSlow.
 It allows you to carefully analyze which things Drupal could be doing better.
 It's not necessarily meaningful in real-world situations, because it e.g.
 only checks if you're using a CDN, not how fast that CDN is.
 However, the fact that it tests whether a CDN is being used (or Expired
 headers, or gzipped components, or …) is enough to find out what can be
 improved, to maximize the potential performance.
\begin_inset Newline newline
\end_inset

This kind of analysis is exactly what I'll perform in the next section:
 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:The-State-of-Drupal"

\end_inset

.
\end_layout

\begin_layout Standard
There is one more tool that jumps out for real, practical use: Episodes.
 This tool, if properly integrated with Drupal, would be a key asset to
 Drupal, because it would enable web site owners to track the real-world
 page loading performance.
 It would allow contributed module developers to support Episodes.
 This, in turn, would be a good indicator for a module's quality and would
 allow the web site owner/administrator/developer to carefully analyze each
 aspect of his Drupal web site.
\begin_inset Newline newline
\end_inset

I will create this integration as part of my bachelor thesis, see section
 
\begin_inset CommandInset ref
LatexCommand vref
reference "sec:Episodes.module"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
The State of Drupal's page loading performance
\begin_inset CommandInset label
LatexCommand label
name "sec:The-State-of-Drupal"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Improving Drupal: Episodes.module
\begin_inset CommandInset label
LatexCommand label
name "sec:Episodes.module"

\end_inset


\end_layout

\begin_layout Standard
The work I'll be doing on improving Drupal's page loading performance should
 be practical, not theoretical.
 It should have a real-world impact.
\end_layout

\begin_layout Standard
To ensure that that also happens, I wrote the Episodes module 
\begin_inset CommandInset citation
LatexCommand cite
key "Episodes Drupal module project page"

\end_inset

.
 This module integrates the Episodes framework for timing web pages (see
 section 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Episodes"

\end_inset

) with Drupal on several levels – 
\emph on
all without modifying Drupal core
\emph default
:
\end_layout

\begin_layout Itemize
Automatically includes the necessary JavaScript files and settings on each
 appropriate page.
\end_layout

\begin_layout Itemize
Automatically inserts the crucial initializiation variables at the top of
 the 
\family typewriter
head
\family default
 tag.
\end_layout

\begin_layout Itemize
Automatically turns each behavior (in 
\family typewriter
Drupal.behaviors
\family default
) is automatically into its own episode.
\end_layout

\begin_layout Itemize
Provides a centralized mechanism for lazy loading callbacks that perform
 the lazy loading of content.
 These are then also automatically measured.
\end_layout

\begin_layout Itemize
For measuring the 
\family typewriter
episodes
\family default
, 
\family typewriter
css
\family default
, 
\family typewriter
headerjs
\family default
 and 
\family typewriter
footerjs
\family default
 episodes, you need to change a couple of lines in the 
\family typewriter
page.tpl.php
\family default
 file of your theme.
\end_layout

\begin_layout Itemize
Provides basic reports with charts to learn more about the collected data.
\end_layout

\begin_layout Subsection
The goal
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Relatively brief textual explanation.
 Big visual explanation, with a timeline referencing parts of a zoomed in,
 annotated HTML file.
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Making episodes.js reusable
\begin_inset CommandInset label
LatexCommand label
name "sub:Episodes.module:reusable"

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
episodes.js
\family default
 file provided at the Episodes example 
\begin_inset CommandInset citation
LatexCommand cite
key "Episodes Example"

\end_inset

 was in fact just a rough sample implementation, an implementation that
 indicates what it should look like.
 It contained several hardcoded URLs, didn't measure the sensible default
 episodes, contained a few bugs.
 In short, it was an excellent and solid start, but it needed some work
 to be truly reusable.
\end_layout

\begin_layout Standard
I improved 
\family typewriter
episodes.js
\family default
 to make it reusable, so that I could integrate it with Drupal without adding
 Drupal-specific code to it.
 I made it so that all you have to do is something like this:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "float,language=HTML,numbers=left,numberstyle={\scriptsize},tabsize=4"
inline false
status open

\begin_layout Plain Layout

<head>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<!-- Initialize EPISODES.
 -->
\end_layout

\begin_layout Plain Layout

<script type="text/javascript">
\end_layout

\begin_layout Plain Layout

	var EPISODES = EPISODES || {};
\end_layout

\begin_layout Plain Layout

	EPISODES.frontendStartTime = Number(new Date());
\end_layout

\begin_layout Plain Layout

	EPISODES.compatScriptUrl = "lib/episodes-compat.js";
\end_layout

\begin_layout Plain Layout

	EPISODES.logging = true;
\end_layout

\begin_layout Plain Layout

	EPISODES.beaconUrl = "episodes/beacon";
\end_layout

\begin_layout Plain Layout

</script>
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<!-- Load episodes.js.
 -->
\end_layout

\begin_layout Plain Layout

<script type="text/javascript" src="lib/episodes.js" />
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

<!-- Rest of head tag.
 -->
\end_layout

\begin_layout Plain Layout

<!-- ...
 -->
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

</head>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This way, you can set the variables to what you need them to be without
 customizing 
\family typewriter
episodes.js
\family default
.
 Line 6 should be as early in the page as possible, because that'll be one
 of the main reference timestamps.
\end_layout

\begin_layout Subsection
Integrating with Drupal
\end_layout

\begin_layout Standard
To integrate with Drupal, I did the following:
\end_layout

\begin_layout Itemize
Implemented 
\family typewriter
hook_install()
\family default
, through which I set a module weight of -1000.
 This ensures my module is executed as the first one for every hook implementati
on.
\end_layout

\begin_layout Itemize
Implemented 
\family typewriter
hook_init()
\family default
, which is invoked at the end of the Drupal bootstrap process.
 Through this hook I automatically insert the JavaScript into the 
\family typewriter
<head>
\family default
 tag that's necessary to make Episodes work (see section 
\begin_inset CommandInset ref
LatexCommand vref
reference "sub:Episodes.module:reusable"

\end_inset

).
 Thanks to the extremely low module weight, my JavaScript code are inserted
 first into the 
\family typewriter
<head>
\family default
 tag.
\end_layout

\begin_layout Itemize
Also through this same hook I add 
\family typewriter
Drupal.episodes.js
\family default
, which provides the actual integration with Drupal.
 It automatically creates an episode for each Drupal 
\begin_inset Quotes eld
\end_inset

behavior
\begin_inset Quotes erd
\end_inset

.
 A behavior is written in JavaScript and adds interactivity to the web page.
 Each time new content is added to the page through AHAH, 
\family typewriter
Drupal.attachBehaviors()
\family default
 is called and automatically attaches behaviors to new content, but not
 to existing content.
 Through Drupal.episodes.js, I override Drupal's default 
\family typewriter
Drupal.attachBehaviors()
\family default
 method – this is very easy in JavaScript.
 In this overriden version, I automatically measure each behavior as an
 episode.
\begin_inset Newline newline
\end_inset

Thanks to Drupal's existing abstraction and my override, all JavaScript
 code can be measured through episodes without hacking Drupal core.
\begin_inset Newline newline
\end_inset

Here's a simplified version of what it does:
\begin_inset Newline newline
\end_inset


\begin_inset listings
lstparams "float,language=Java,tabsize=2"
inline false
status open

\begin_layout Plain Layout

Drupal.attachBehaviors = function(context) { 
\end_layout

\begin_layout Plain Layout

	url = document.location;
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	for (behavior in Drupal.behaviors) {
\end_layout

\begin_layout Plain Layout

		window.postMessage("EPISODES:mark:" + behavior, url);
\end_layout

\begin_layout Plain Layout

		Drupal.behaviors[behavior](context);
\end_layout

\begin_layout Plain Layout

		window.postMessage("EPISODES:measure:" + behavior, url);
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

};
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Theme layer changes, scanning behaviors with batch api … 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Screenshots!
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Reports
\end_layout

\begin_layout Standard
Only basic reports are provided, highlighting the most important statistics
 and visualizing them through charts.
 Advanced/detailed reports are beyond the scope of this bachelor thesis,
 because they require extensive performance research (to be able to handle
 massive datasets), database indexing optimization and usability research.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Screenshots!
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Insights
\end_layout

\begin_layout Itemize
Episodes module
\end_layout

\begin_deeper
\begin_layout Itemize
Generating the back-end start time on the server can never work reliably
 because the clocks of the client (browser) and server are never perfectly
 in sync, which is required.
\end_layout

\begin_layout Itemize
Even just measuring the page execution time on the server cannot work because
 of this same reason.
 You 
\emph on
can
\emph default
 accurately measure this time, but you can't 
\emph on
relate
\emph default
 it to the measurements in the browser.
 I implemented this using implementations Drupal's 
\family typewriter
hook_boot()
\family default
 and 
\family typewriter
hook_exit()
\family default
 hooks and came to this conclusion.
\end_layout

\end_deeper
\begin_layout Itemize
Episodes Server module
\end_layout

\begin_deeper
\begin_layout Itemize
Currently the same database as Drupal is being used.
 Is this scalable enough for analyzing the logs of web sites with millions
 of page views? No.
 Writing everything to a SQLite database wouldn't be better.
 The real solution is to use a different server to log to or even a web
 service.
 Better even is to log to a non-app server of your own and then send the
 logs to an external web service.
 Then you stay in control of all your data! (Avoiding vendor lock-in.) The
 main reason I opted for using the same database, is ease of development.
\begin_inset Newline newline
\end_inset

Optimizing the profiling tool is not the goal of this bachelor thesis, optimizin
g page loading performance is.
\end_layout

\end_deeper
\begin_layout Subsection
Feedback from Steve Souders
\end_layout

\begin_layout Standard
I explained Steve Souders what I wanted to achieve through this bachelor
 thesis and the initial work I had already done on integrating Episodes
 with Drupal.
 This is how his reply started:
\end_layout

\begin_layout Quotation
Wow.
 
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Quotation
Wow, this is awesome.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Wait for Steve's further feedback.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Section
Improving Drupal: JS at the bottom
\begin_inset CommandInset label
LatexCommand label
name "sec:JS-at-the-bottom"

\end_inset


\end_layout

\begin_layout Section
Improving Drupal: CDN integration
\begin_inset CommandInset label
LatexCommand label
name "sec:CDN-integration"

\end_inset


\end_layout

\begin_layout Section
Used technologies
\end_layout

\begin_layout Itemize
Languages
\end_layout

\begin_deeper
\begin_layout Itemize
PHP
\end_layout

\begin_layout Itemize
JavaScript
\end_layout

\begin_layout Itemize
Python
\end_layout

\end_deeper
\begin_layout Itemize
Frameworks
\end_layout

\begin_deeper
\begin_layout Itemize
Drupal (Forms API, Batch API, menu system, Schema API, etc.)
\end_layout

\begin_layout Itemize
jQuery
\end_layout

\begin_layout Itemize
Episodes
\end_layout

\end_deeper
\begin_layout Itemize
APIs
\end_layout

\begin_deeper
\begin_layout Itemize
Browser.php
\end_layout

\begin_layout Itemize
Google Chart API
\end_layout

\end_deeper
\begin_layout Itemize
Integrates with the following applications
\end_layout

\begin_deeper
\begin_layout Itemize
Apache HTTP Server
\end_layout

\end_deeper
\begin_layout Section
Test cases
\end_layout

\begin_layout Subsection
DriverPacks.net
\end_layout

\begin_layout Section
Conclusion
\end_layout

\begin_layout Standard
\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "presentation Design Fast Websites"

\end_inset


\emph on
Design Fast Websites
\emph default
, Nicole Sullivan, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.slideshare.net/stubbornella/designing-fast-websites-presentation
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Google maps load time impact"

\end_inset


\emph on
We're all guinea pigs in Google's search experiment,
\emph default
 Stephen Shankland, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://news.cnet.com/8301-10784_3-9954972-7.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "High Performance Web Sites Book"

\end_inset


\emph on
High Performance Web Sites
\emph default
, Steve Souders, 2007, O'Reilly, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/hpws/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Drupal usage statistics"

\end_inset


\emph on
Usage statistics for Drupal,
\emph default
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://drupal.org/project/usage/drupal
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "UA Profiler"

\end_inset


\emph on
UA Profiler
\emph default
, Steve Souders, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/ua/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Cuzillion"

\end_inset


\emph on
Cuzillion
\emph default
, Steve Souders, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/cuzillion/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Cuzillion announcement"

\end_inset


\emph on
Cuzillion
\emph default
, Steve Souders, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.stevesouders.com/blog/2008/04/25/cuzillion/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Hammerhead"

\end_inset


\emph on
Hammerhead
\emph default
, Steve Souders, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/hammerhead/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Hammerhead announcement"

\end_inset


\emph on
Hammerhead:
\begin_inset space ~
\end_inset

moving performance testing upstream
\emph default
, Steve Souders, September 30, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.stevesouders.com/blog/2008/09/30/hammerhead-moving-performance-testing-
upstream/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Firebug"

\end_inset


\emph on
Firebug
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://getfirebug.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Fasterfox"

\end_inset


\emph on
Fasterfox
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://fasterfox.mozdev.org/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "YSlow"

\end_inset


\emph on
YSlow
\emph default
, Steve Souders, 2007, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://developer.yahoo.com/yslow/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Exceptional Performance"

\end_inset


\emph on
Exceptional Performance
\emph default
, 2007, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://developer.yahoo.com/performance/index.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "YSlow Rules"

\end_inset


\emph on
Best Practices for Speeding Up Your Web Site
\emph default
, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://developer.yahoo.com/performance/rules.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "YSlow Jeff Atwood"

\end_inset


\emph on
YSlow: Yahoo's Problems Are Not Your Problems
\emph default
, Jeff Atwood, 2007, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.codinghorror.com/blog/archives/000932.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "YSlow 2.0 early preview"

\end_inset


\emph on
YSlow 2.0 early preview in China
\emph default
, Yahoo! Developer Network, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://developer.yahoo.net/blog/archives/2008/12/yslow_20.html
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Souders State of Performance 2008"

\end_inset


\emph on
State of Performance 2008
\emph default
, Steve Souders, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.stevesouders.com/blog/2008/12/17/state-of-performance-2008/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Apache JMeter"

\end_inset


\emph on
Apache JMeter
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://jakarta.apache.org/jmeter/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "JMeter Drupal article 1"

\end_inset


\emph on
Load test your Drupal application scalability with Apache JMeter
\emph default
, John Quinn, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.johnandcailin.com/blog/john/load-test-your-drupal-application-scalabili
ty-apache-jmeter
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "JMeter Drupal article 2"

\end_inset


\emph on
Load test your Drupal application scalability with Apache JMeter: part two
\emph default
, John Quinn, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.johnandcailin.com/blog/john/load-test-your-drupal-application-scalabili
ty-apache-jmeter:-part-two
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Gomez web site"

\end_inset


\emph on
Gomez
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.gomez.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Keynote web site"

\end_inset


\emph on
Keynote
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.keynote.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "WebMetrics web site"

\end_inset


\emph on
WebMetrics
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.webmetrics.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Pingdom web site"

\end_inset


\emph on
Pingdom
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://pingdom.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "AJAX wikipedia"

\end_inset


\emph on
AJAX
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/AJAX
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "web site Selenium"

\end_inset


\emph on
Selenium
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://seleniumhq.org/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Keynote KITE"

\end_inset


\emph on
Keynote KITE
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://kite.keynote.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Gomez Script Recorder"

\end_inset


\emph on
Gomez Script Recorder
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://www.gomeznetworks.com/help/Gomezu/main/Gomez_university/3_Gomez_Script_Reco
rder/toc.htm
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "web site WhitePages"

\end_inset


\emph on
WhitePages,
\emph default
 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://whitepages.com/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Velocity 2008 Jiffy presentation"

\end_inset

Velocity 2008, 
\emph on
Jiffy: Open Source Performance Measurement and Instrumentation
\emph default
, Scott Ruthfield, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://en.oreilly.com/velocity2008/public/schedule/detail/4404
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "video of Velocity 2008 Jiffy presentation"

\end_inset

Velocity 2008, 
\emph on
video of the Jiffy presentation
\emph default
, Scotth Ruthfield, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://blip.tv/file/1018527
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Jiffy project"

\end_inset


\emph on
Jiffy
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://code.google.com/p/jiffy-web/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Jiffy Firebug Extension"

\end_inset


\emph on
Jiffy Firebug Extension
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://billwscott.com/jiffyext/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "white paper Episodes"

\end_inset


\emph on
Episodes: a Framework for Measuring Web Page Load Times
\emph default
, Steve Souders, July 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/episodes/paper.php
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "presentation Episodes"

\end_inset


\emph on
Episodes: a shared approach for timing web pages
\emph default
, Steve Souders, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/docs/episodes-tae-20080930.ppt
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Google Analytics"

\end_inset


\emph on
Google Analytics
\emph default
, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://google.com/analytics
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Episodes home page"

\end_inset


\emph on
Episodes
\emph default
, Steve Souders, 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/episodes/
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Episodes white paper"

\end_inset


\emph on
Episodes: a Framework for Measuring Web Page Load Times,
\emph default
 Steve Souders, July 2008, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://stevesouders.com/episodes/paper.php
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Episodes Drupal module project page"

\end_inset


\emph on
Episodes Drupal module
\emph default
, Wim Leers, 2009, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://drupal.org/project/episodes
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "Episodes Example"

\end_inset


\emph on
Episodes Example
\emph default
, Steve Souders, 2008, 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://stevesouders.com/episodes/example.php
\end_layout

\end_inset


\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "JSMIN"

\end_inset


\emph on
JSMin, The JavaScript Minifier
\emph default
, Douglas Crockford, 2003, 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

http://javascript.crockford.com/jsmin.html
\end_layout

\end_inset


\end_layout

\end_body
\end_document
