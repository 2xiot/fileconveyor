diff -r 912f387906b7 backends/S3BotoStorage.py
--- a/backends/S3BotoStorage.py	Mon Mar 02 01:05:37 2009 +0100
+++ b/backends/S3BotoStorage.py	Wed May 13 13:40:06 2009 +0200
@@ -1,4 +1,6 @@
 import os
+from mimetypes import guess_type
+
 
 from django.conf import settings
 from django.core.exceptions import ImproperlyConfigured
@@ -12,6 +14,7 @@
 AWS_BUCKET_NAME = 'AWS_STORAGE_BUCKET_NAME'
 
 AWS_BUCKET_PREFIX = getattr(settings, AWS_BUCKET_NAME, {})
+AWS_HEADERS       = getattr(settings, AWS_HEADERS, {})
 
 try:
     from boto.s3.connection import S3Connection
@@ -22,15 +25,16 @@
 class S3BotoStorage(Storage):
     """Amazon Simple Storage Service using Boto"""
     
-    def __init__(self, bucket="root", bucketprefix=AWS_BUCKET_PREFIX, access_key=None, secret_key=None, acl='public-read'):
-        self.acl = acl
-        
+    def __init__(self, bucket="root", bucketprefix=AWS_BUCKET_PREFIX, access_key=None, secret_key=None, acl='public-read', headers=AWS_HEADERS):
         if not access_key and not secret_key:
              access_key, secret_key = self._get_access_keys()
-        
+
+        self.acl = acl
+        self.headers = headers
+
         self.connection = S3Connection(access_key, secret_key)
         self.bucket = self.connection.create_bucket(bucketprefix + bucket)
-        self.headers = getattr(settings, AWS_HEADERS, {})
+        self.bucket.set_acl(self.acl)
     
     def _get_access_keys(self):
         access_key = getattr(settings, ACCESS_KEY_NAME, None)
@@ -49,10 +53,14 @@
         return S3BotoStorageFile(name, mode, self)
     
     def _save(self, name, content):
+        content_type = guess_type(name)[0] or "application/x-octet-stream"
+        headers = self.headers
+        headers['Content-Type'] = content_type
+
         k = self.bucket.get_key(name)
         if not k:
             k = self.bucket.new_key(name)
-        k.set_contents_from_file(content)
+        k.set_contents_from_file(content, headers, policy=self.acl)
         return name
     
     def delete(self, name):
@@ -69,7 +77,7 @@
         return self.bucket.get_key(name).size
     
     def url(self, name):
-        return self.bucket.get_key(name).generate_url(3600, method='GET')
+        return self.bucket.get_key(name).generate_url(3600, method='GET', query_auth=False, force_http=True)
     
     def get_available_name(self, name):
         """ Overwrite existing file with the same name. """
