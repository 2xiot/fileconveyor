Questions for Steve Souders:
- Why hardcode the domain name in window.postMessage() calls when you could also just use document.location?
- Why hardcode scriptUrl? It should be in EPISODES.compatScriptUrl?
- Should the first byte always be measured explicitly?
  http://stevesouders.com/episodes/episodes.js suggests you shouldn't: it estimates the start time based on a cookie â€“ BUT WHAT WITH THE FIRST TIME?
  http://stevesouders.com/episodes/example.php suggests you should measure it explicitly.
  But firstbyte only starts measuring from the front-end. I also want to measure
  the back-end. So I'm now setting EPISODES.backendStartTime from the back-end.
- Is http://stevesouders.com/episodes/episodes.js released under the GPL or the public domain?
- Should a domready event (besides the pageready) episode be added to episodes.js?
- "beacon" is an odd term and therefor "beacon URL" too. Can't we switch to "logging URL"?



Problems-that-need-thought:
- Handle dev/staging/production.
- Encourage module developers to support EPISODES when present. Should degrade gracefully.
  -> lazy loading callbacks
  -> own episodes
  -> separate logs because they're not entire page load sequences?
- On the first page load, the cookie is not yet set and therefor the pageready,
  backend and totaltime times cannot be calculated. Also a problem when cookies are disabled
- time zone handling: necessary or not (for the ingestor)



Know-how-to-do-but-not-yet-done:
- Validation of the beacon URL and the log file to ingest


Drupal core ideas:
- Not only provide Drupal.behaviors, but Drupal.transformations (carousel etc) and Drupal.lazy.



Insights
- Generating the back-end start time on the server can never work reliably because
  the clocks of the client (browser) and server can never be in sync precise enough.
- Even just measuring the page execution time on the server cannot work
  because of this same reason. You can accurately measure this time, but you
  can't relate it to the measurements in the browser.
  (I implemented this using hook_boot() and hook_exit())
- RTT estimator cannot work either
- Currently the same DB as Drupal is being used. Is this scalable enough?
  Writing everything to a sqlite server won't solve anything either. The real
  solution is to use a different server to log to or even a web service. Better
  even is to log to a non-app server of your own and then send the logs to an
  external web service. Then you stay in control of all your data! (Avoiding
  vendor lock-in.)
